#pragma once

using namespace System;
using namespace System::Reflection;

// PhysX 2.8.1.4 (May 2008)
//#define RequiredPhysXVersion "2.8.1.4"
//#define NxCharacterDllMD5 { 0x36, 0x65, 0xD7, 0x68, 0x21, 0xE8, 0x3A, 0x91, 0x71, 0x8F, 0xE4, 0x6D, 0x6F, 0xCB, 0xDA, 0x79 }
//#define NxCookingDllMD5 { 0x06, 0x84, 0xF8, 0x16, 0xBE, 0x2E, 0x7E, 0x7B, 0x8E, 0x06, 0x48, 0x94, 0x5A, 0xFE, 0x4B, 0x5A }
//#define PhysXLoaderDllMD5 { 0x20, 0xB1, 0x17, 0x14, 0xB0, 0xC6, 0x3F, 0x3F, 0x59, 0x4E, 0xC5, 0xDD, 0x6A, 0x00, 0xD7, 0xE6 }

// PhysX 2.8.1.15 (October 2008)
//#define RequiredPhysXVersion "2.8.1.15"
//#define NxCharacterDllMD5 { 0x56, 0x23, 0xB2, 0xDE, 0x12, 0x80, 0x07, 0x2B, 0x63, 0xC3, 0x69, 0xB1, 0xBA, 0xC1, 0x10, 0x27 }
//#define NxCookingDllMD5 { 0xD2, 0xD9, 0xBD, 0x51, 0x34, 0xA9, 0xD4, 0xC1, 0x82, 0x52, 0x5B, 0x78, 0x97, 0x34, 0x5B, 0x4E }
//#define PhysXLoaderDllMD5 { 0x63, 0xB3, 0x13, 0xCA, 0xD9, 0xA1, 0x8B, 0x04, 0x49, 0x83, 0x96, 0xB6, 0xAA, 0x96, 0x94, 0x27 }

// PhysX 2.8.1.21 (January 2009)
//#define RequiredPhysXVersion "2.8.1.21"
//#define NxCharacterDllMD5 { 0x23, 0x3E, 0x75, 0x4B, 0xC5, 0xAF, 0xF9, 0x2F, 0xD2, 0x21, 0xE0, 0xA9, 0xBC, 0x9C, 0x3A, 0xAB }
//#define NxCookingDllMD5 { 0xA3, 0x57, 0x8B, 0xA9, 0x60, 0x03, 0x7B, 0xE8, 0x59, 0x3D, 0x82, 0xE5, 0x8E, 0xBA, 0x2F, 0xED }
//#define PhysXLoaderDllMD5 { 0xC7, 0x9A, 0x6B, 0xDE, 0xA8, 0xC0, 0xD2, 0x97, 0x52, 0xA9, 0xB9, 0x8E, 0xC6, 0xCA, 0x9C, 0xE6 }

// PhysX 2.8.3.15 (June 2009)
#define RequiredPhysXVersion "2.8.3.15"
#if _WIN64 // x64 version
#define NxCharacterDllMD5 { 0xC6, 0x10, 0x76, 0x1F, 0x28, 0xDE, 0x86, 0x17, 0x47, 0x68, 0x88, 0x92, 0x31, 0x28, 0x2C, 0x57 }
#define PhysXCookingDllMD5 { 0x1E, 0x21, 0x65, 0xEF, 0x0F, 0x63, 0x1E, 0xA8, 0x18, 0xE6, 0x41, 0x6D, 0x2F, 0xFB, 0x77, 0x9A }
#define PhysXLoaderDllMD5 { 0x97, 0xE7, 0x30, 0x34, 0xED, 0x01, 0xC7, 0xA4, 0xAA, 0x62, 0x84, 0x62, 0x2E, 0x1B, 0x0D, 0x49 }
#define PhysXCoreDllMD5 { 0x40, 0x8E, 0x3B, 0xA7, 0x66, 0x4A, 0x4E, 0x1A, 0xEA, 0x58, 0x5B, 0x91, 0x5A, 0xA7, 0x0D, 0x7B }
#define PhysXDeviceDllMD5 { 0x60, 0x8E, 0x10, 0xC7, 0x22, 0xAC, 0xC4, 0x83, 0xAB, 0x70, 0xAC, 0x0C, 0xB5, 0x2C, 0x88, 0xA3 }
#else // x86 version
#define NxCharacterDllMD5 { 0x49, 0x8F, 0x5C, 0x50, 0xCA, 0x8B, 0x63, 0x8C, 0x6C, 0x26, 0x8A, 0x91, 0x22, 0x7C, 0xD7, 0xE7 }
#define PhysXCookingDllMD5 { 0x08, 0x13, 0x57, 0xF2, 0x79, 0x13, 0xD1, 0xF4, 0x35, 0x8D, 0x75, 0x2A, 0x49, 0x99, 0x67, 0xFD }
#define PhysXLoaderDllMD5 { 0xB7, 0x04, 0x0F, 0xA6, 0xB0, 0xBF, 0x44, 0x98, 0x6F, 0xD5, 0xA1, 0x34, 0x4F, 0xCF, 0x4B, 0x80 }
#define PhysXCoreDllMD5 { 0x87, 0x64, 0x59, 0xAB, 0x17, 0xA5, 0x5E, 0xAA, 0x90, 0x1A, 0x26, 0x20, 0x93, 0xE2, 0x54, 0xE3 }
#define PhysXDeviceDllMD5 { 0x32, 0xC5, 0xFB, 0xD9, 0x3A, 0x8B, 0xE3, 0x8D, 0x8F, 0x7F, 0x49, 0xEA, 0x5F, 0xB4, 0x27, 0xAD }
#endif

namespace StillDesign
{
	namespace PhysX
	{
		private ref class RuntimeFileChecks
		{
			public:
				static void Check();
				
			private:
				static void CheckFile( String^ filename, array<Byte>^ knownHash );
				
				static String^ FindLibraryPath( System::String^ name );
				static Assembly^ GetBestAssembly();
				
				static String^ GetEnvironmentPathVariable( String^ name );
				
				static bool CompareHash( array<Byte>^ a, array<Byte>^ b );
		};
	};
};